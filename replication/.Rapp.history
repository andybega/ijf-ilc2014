foo[1]
foo[]
foo[df$var2]
foo[[]]
str(foo[])
str(foo)
foo$by
foo[, 1]
foo[2]
foo[1]
foo[]
as.data.frame(foo[])
v3obs[]
foo[]
c(foo[])
df$var6 <- foo[]
head(df)
tail(df)
with(df, id[var5 < 8])
with(foo, table(var1, var2, var3))
?table
table(foo[, c("var1", "var2", "var3")])
?table
xtab(var1 ~ var2, df)
ftable(df$var1, df$var2, df$var3)
table(df$var1, df$var2, df$var3)
table(foo$var1, foo$var2, foo$var3)
foo <- df[df$var4==20 | df$var5==7, ]
table(foo$var1, foo$var2, foo$var3)
by(foo, foo$var1, function(x) table(x[, c("var2", "var3")]))
str(foo)
?table
table(foo$var2, foo$var3, foo$var1)
?table
table(droplevels(foo$var2, foo$var3, foo$var1))
droplevels(table(foo$var2, foo$var3, foo$var1))
quit("no")
set.seed(123)#
df <- data.frame(id=c(paste0(letters[1:10], 1:10)), matrix(sample(1:20, 500, replace=T), nrow=100, ncol=5))#
colnames(df)[2:6] <- paste0("var", 1:5)#
#
#count if var2==3       /* counts the number of observations that #
#                          have a value of 3 on var2 */#
#
nrow(df[df$var2==3, ])#
sum(df$var2==3)#
#
#list id if var7 < 8    /* lists the ID of observations with a #
#                          value less than 8 on var7 */#
#
df$id[df$var5 < 8]#
#bysort var3: tab1 var2 var9 if var8=2 | var1 !=11 /* create a series of separate #
#                         two-way frequency tables for those observations of var2#
#                         and var9 where var8 is 2 or var1 isn't 11 */#
#
foo <- df[df$var4==20 | df$var5==7, ]#
by(foo, foo$var1, function(x) table(x[, c("var2", "var3")]))#
#
table(foo$var2, foo$var3, foo$var1)#
#
#egen var3 = count(var1), by(var2)  /* creates var3 as the total observations in #
#                                      var1, for each category in var2 */#
#
v3obs <- by(df, df$var2, function(x) sum(!is.na(x$var3)))#
v3obs[]
v3obs[]
dim(v3obs[])
names(v3obs[])
v3obs <- data.frame(var2=names(v3obs[], var3=v3obs[]))
v3obs <- data.frame(var2=names(v3obs[]), var3=v3obs[])
v3obs
foo <- merge(foo, v3obs, by="var2", type="left")
head(foo)
#################################################################################
###
##    Create a blank panel data set based on Gleditsch and Ward or COW.#
##    Andreas Beger#
##    10 Dec. 2013#
###
##    G&W: http://privatewww.essex.ac.uk/~ksg/statelist.html#
##    COW: http://www.correlatesofwar.org/datasets.html#
###
#################################################################################
#
statePanel <- function(start.date, end.date, by="month", useGW=TRUE) {#
  require(cshapes)#
  panel.start <- attemptDate(start.date, by)#
  panel.end <- attemptDate(end.date, by)#
  # Create vector of desired dates#
  date <- seq.Date(panel.start, panel.end, by=by)#
  # Initialize results panel#
  panel <- data.frame(NULL)#
  # Get full data and subset by date; fill in results#
  cshp.full <- cshp()@data#
  max.cshp.date <- max(as.Date(paste(cshp.full$GWEYEAR, cshp.full$GWEMONTH, cshp.full$GWEDAY, sep = "-")), na.rm=T)#
  # Progress bar#
  pb <- txtProgressBar(1, length(date), initial=1, style=3, width=60)#
  for (i in seq_along(date)) {#
    if (useGW) {#
      ctry.start <- as.Date(paste(cshp.full$GWSYEAR, cshp.full$GWSMONTH, cshp.full$GWSDAY, sep = "-"))#
      ctry.end   <- as.Date(paste(cshp.full$GWEYEAR, cshp.full$GWEMONTH, cshp.full$GWEDAY, sep = "-"))#
      if (date[i] <= max.cshp.date) {#
      	date.slice <- cshp.full[ctry.start <= date[i] & ctry.end >= date[i], "GWCODE"]#
        date.slice <- date.slice[!is.na(date.slice$GWCODE), ]  # fix for NA dates in GW#
      } else {#
      	date.slice <- cshp.full[ctry.start <= max.cshp.date & ctry.end >= max.cshp.date, "GWCODE"]#
      	date.slice <- date.slice[!is.na(date.slice$GWCODE), ]  # fix for NA dates in GW#
      	warning(paste0("Exceeding cshapes max date, using ", max.cshp.date, " instead of ", date[i]))#
      }#
    } else if (!useGW) {#
      ctry.start <- as.Date(paste(cshp.full$COWSYEAR, cshp.full$COWSMONTH, cshp.full$COWSDAY, sep = "-"))#
      ctry.end   <- as.Date(paste(cshp.full$COWEYEAR, cshp.full$COWEMONTH, cshp.full$COWEDAY, sep = "-"))#
      if (date[i] <= max.cshp.date) {	#
        date.slice <- cshp.full[ctry.start <= date[i] & ctry.end >= date[i], "COWCODE"]#
      } else {#
      	date.slice <- cshp.full[ctry.start <= max.cshp.date & ctry.end >= max.cshp.date, "COWCODE"]#
      	warning(paste0("Exceeding cshapes max date, using ", max.cshp.date, " instead of ", date[i]))#
      }#
    }#
    # Append to results panel#
    panel <- rbind(panel, data.frame(ccode=date.slice, date=date[i]))#
    # Update progress bar#
    setTxtProgressBar(pb, i)#
  }#
  # Create unique ID#
  panel$id <- paste(panel$date, panel$ccode)#
  panel <- panel[order(panel$ccode, panel$date), ]#
  close(pb)#
  return(panel)#
}#
#
attemptDate <- function(date, by) {#
  if (!class(date)=="Date") {#
  	try(date <- as.Date(date), silent=TRUE)#
  	if (class(date)=="Date") {#
  	  warning("Converting to 'Date' class")#
    } else if (by=="year") {#
  	  try(date <- as.Date(paste0(date, "-06-30")), silent=TRUE)#
  	  if (class(date)=="Date") {#
  	  	warning("Converting to 'Date' class with yyyy-06-30")#
  	  }#
  	} else if (by=="month") {#
  	  try(date <- as.Date(paste0(date, "-15")), silent=TRUE)#
  	  if (class(date)=="Date") {#
  	  	warning("Converting to 'Date' class with yyyy-mm-15")#
  	  }#
  	}#
  }#
  if (!class(date)=="Date") {#
  	stop(paste("Could not convert to class 'Date'"))#
  }#
  return(date)#
}#
#
# Example#
#example1 <- statePanel("2000", "2010", by="year")#
#example2 <- statePanel("1955-01", "2012-06", by="month")
example1 <- statePanel("2000", "2010", by="year")
str(example1)
undebug(statePanel)
undebug("statePanel")
debug("statePanel")
example1 <- statePanel("2000", "2010", by="year")
head(cshp.full)
head(date.slice)
#################################################################################
###
##    Create a blank panel data set based on Gleditsch and Ward or COW.#
##    Andreas Beger#
##    10 Dec. 2013#
###
##    G&W: http://privatewww.essex.ac.uk/~ksg/statelist.html#
##    COW: http://www.correlatesofwar.org/datasets.html#
###
#################################################################################
#
statePanel <- function(start.date, end.date, by="month", useGW=TRUE) {#
  require(cshapes)#
  panel.start <- attemptDate(start.date, by)#
  panel.end <- attemptDate(end.date, by)#
  # Create vector of desired dates#
  date <- seq.Date(panel.start, panel.end, by=by)#
  # Initialize results panel#
  panel <- data.frame(NULL)#
  # Get full data and subset by date; fill in results#
  cshp.full <- cshp()@data#
  max.cshp.date <- max(as.Date(paste(cshp.full$GWEYEAR, cshp.full$GWEMONTH, cshp.full$GWEDAY, sep = "-")), na.rm=T)#
  # Progress bar#
  pb <- txtProgressBar(1, length(date), initial=1, style=3, width=60)#
  for (i in seq_along(date)) {#
    if (useGW) {#
      ctry.start <- as.Date(paste(cshp.full$GWSYEAR, cshp.full$GWSMONTH, cshp.full$GWSDAY, sep = "-"))#
      ctry.end   <- as.Date(paste(cshp.full$GWEYEAR, cshp.full$GWEMONTH, cshp.full$GWEDAY, sep = "-"))#
      if (date[i] <= max.cshp.date) {#
      	date.slice <- cshp.full[ctry.start <= date[i] & ctry.end >= date[i], "GWCODE"]#
        date.slice <- date.slice[!is.na(date.slice$GWCODE)]  # fix for NA dates in GW#
      } else {#
      	date.slice <- cshp.full[ctry.start <= max.cshp.date & ctry.end >= max.cshp.date, "GWCODE"]#
      	date.slice <- date.slice[!is.na(date.slice$GWCODE)]  # fix for NA dates in GW#
      	warning(paste0("Exceeding cshapes max date, using ", max.cshp.date, " instead of ", date[i]))#
      }#
    } else if (!useGW) {#
      ctry.start <- as.Date(paste(cshp.full$COWSYEAR, cshp.full$COWSMONTH, cshp.full$COWSDAY, sep = "-"))#
      ctry.end   <- as.Date(paste(cshp.full$COWEYEAR, cshp.full$COWEMONTH, cshp.full$COWEDAY, sep = "-"))#
      if (date[i] <= max.cshp.date) {	#
        date.slice <- cshp.full[ctry.start <= date[i] & ctry.end >= date[i], "COWCODE"]#
      } else {#
      	date.slice <- cshp.full[ctry.start <= max.cshp.date & ctry.end >= max.cshp.date, "COWCODE"]#
      	warning(paste0("Exceeding cshapes max date, using ", max.cshp.date, " instead of ", date[i]))#
      }#
    }#
    # Append to results panel#
    panel <- rbind(panel, data.frame(ccode=date.slice, date=date[i]))#
    # Update progress bar#
    setTxtProgressBar(pb, i)#
  }#
  # Create unique ID#
  panel$id <- paste(panel$date, panel$ccode)#
  panel <- panel[order(panel$ccode, panel$date), ]#
  close(pb)#
  return(panel)#
}#
#
attemptDate <- function(date, by) {#
  if (!class(date)=="Date") {#
  	try(date <- as.Date(date), silent=TRUE)#
  	if (class(date)=="Date") {#
  	  warning("Converting to 'Date' class")#
    } else if (by=="year") {#
  	  try(date <- as.Date(paste0(date, "-06-30")), silent=TRUE)#
  	  if (class(date)=="Date") {#
  	  	warning("Converting to 'Date' class with yyyy-06-30")#
  	  }#
  	} else if (by=="month") {#
  	  try(date <- as.Date(paste0(date, "-15")), silent=TRUE)#
  	  if (class(date)=="Date") {#
  	  	warning("Converting to 'Date' class with yyyy-mm-15")#
  	  }#
  	}#
  }#
  if (!class(date)=="Date") {#
  	stop(paste("Could not convert to class 'Date'"))#
  }#
  return(date)#
}#
#
# Example#
#example1 <- statePanel("2000", "2010", by="year")#
#example2 <- statePanel("1955-01", "2012-06", by="month")
example1 <- statePanel("2000", "2010", by="year")
statePanel
debug("statePanel")
example1 <- statePanel("2000", "2010", by="year")
date.slice
str(date.slice)
Q
#################################################################################
###
##    Create a blank panel data set based on Gleditsch and Ward or COW.#
##    Andreas Beger#
##    10 Dec. 2013#
###
##    G&W: http://privatewww.essex.ac.uk/~ksg/statelist.html#
##    COW: http://www.correlatesofwar.org/datasets.html#
###
#################################################################################
#
statePanel <- function(start.date, end.date, by="month", useGW=TRUE) {#
  require(cshapes)#
  panel.start <- attemptDate(start.date, by)#
  panel.end <- attemptDate(end.date, by)#
  # Create vector of desired dates#
  date <- seq.Date(panel.start, panel.end, by=by)#
  # Initialize results panel#
  panel <- data.frame(NULL)#
  # Get full data and subset by date; fill in results#
  cshp.full <- cshp()@data#
  max.cshp.date <- max(as.Date(paste(cshp.full$GWEYEAR, cshp.full$GWEMONTH, cshp.full$GWEDAY, sep = "-")), na.rm=T)#
  # Progress bar#
  pb <- txtProgressBar(1, length(date), initial=1, style=3, width=60)#
  for (i in seq_along(date)) {#
    if (useGW) {#
      ctry.start <- as.Date(paste(cshp.full$GWSYEAR, cshp.full$GWSMONTH, cshp.full$GWSDAY, sep = "-"))#
      ctry.end   <- as.Date(paste(cshp.full$GWEYEAR, cshp.full$GWEMONTH, cshp.full$GWEDAY, sep = "-"))#
      if (date[i] <= max.cshp.date) {#
      	date.slice <- cshp.full[ctry.start <= date[i] & ctry.end >= date[i], "GWCODE"]#
        date.slice <- date.slice[!is.na(date.slice)]  # fix for NA dates in GW#
      } else {#
      	date.slice <- cshp.full[ctry.start <= max.cshp.date & ctry.end >= max.cshp.date, "GWCODE"]#
      	date.slice <- date.slice[!is.na(date.slice)]  # fix for NA dates in GW#
      	warning(paste0("Exceeding cshapes max date, using ", max.cshp.date, " instead of ", date[i]))#
      }#
    } else if (!useGW) {#
      ctry.start <- as.Date(paste(cshp.full$COWSYEAR, cshp.full$COWSMONTH, cshp.full$COWSDAY, sep = "-"))#
      ctry.end   <- as.Date(paste(cshp.full$COWEYEAR, cshp.full$COWEMONTH, cshp.full$COWEDAY, sep = "-"))#
      if (date[i] <= max.cshp.date) {	#
        date.slice <- cshp.full[ctry.start <= date[i] & ctry.end >= date[i], "COWCODE"]#
      } else {#
      	date.slice <- cshp.full[ctry.start <= max.cshp.date & ctry.end >= max.cshp.date, "COWCODE"]#
      	warning(paste0("Exceeding cshapes max date, using ", max.cshp.date, " instead of ", date[i]))#
      }#
    }#
    # Append to results panel#
    panel <- rbind(panel, data.frame(ccode=date.slice, date=date[i]))#
    # Update progress bar#
    setTxtProgressBar(pb, i)#
  }#
  # Create unique ID#
  panel$id <- paste(panel$date, panel$ccode)#
  panel <- panel[order(panel$ccode, panel$date), ]#
  close(pb)#
  return(panel)#
}#
#
attemptDate <- function(date, by) {#
  if (!class(date)=="Date") {#
  	try(date <- as.Date(date), silent=TRUE)#
  	if (class(date)=="Date") {#
  	  warning("Converting to 'Date' class")#
    } else if (by=="year") {#
  	  try(date <- as.Date(paste0(date, "-06-30")), silent=TRUE)#
  	  if (class(date)=="Date") {#
  	  	warning("Converting to 'Date' class with yyyy-06-30")#
  	  }#
  	} else if (by=="month") {#
  	  try(date <- as.Date(paste0(date, "-15")), silent=TRUE)#
  	  if (class(date)=="Date") {#
  	  	warning("Converting to 'Date' class with yyyy-mm-15")#
  	  }#
  	}#
  }#
  if (!class(date)=="Date") {#
  	stop(paste("Could not convert to class 'Date'"))#
  }#
  return(date)#
}#
#
# Example#
#example1 <- statePanel("2000", "2010", by="year")#
#example2 <- statePanel("1955-01", "2012-06", by="month")
example1 <- statePanel("2000", "2010", by="year")
str(example1)
head(example1)
quit("no")
mean(c(0.7799810, 0.8055067, 0.5747855, 0.5713583, 0.8509407))
quit('no')
library(cshapes)
cshp.full <- cshp()@data
str(cshp.full)
?cshp
foo <- cshp.full[cshp.full$CNTRY_NAME %in% c("Germany", "France"), ]
head(foo)
quit("no")
rm(list=ls())#
#
###
##	CHANGE: path#
###
#
# Set to path containing replication folder#
setwd("~/Work/PITF/IrregularRegimeChange/IJF submission/replication")#
#
# Install packages in R/packages if not already done#
if (!is.element("EBMAforecastbeta", installed.packages()[, 1])) {#
	install.packages("R/packages/EBMAforecastbeta_0.44.zip", repos=NULL, #
		type="source")#
}#
if (!is.element("spduration", installed.packages()[, 1])) {#
	install.packages("R/packages/spduration_0.12.zip", repos=NULL, #
		type="source")#
}#
# Load required libraries#
library(cshapes)#
library(EBMAforecastbeta)#
library(ggplot2)#
library(lubridate)#
library(maptools)#
library(plyr)#
library(pROC)#
library(reshape2)#
library(RColorBrewer)#
library(ROCR)#
library(sbgcop)#
library(scales)#
library(sp)#
library(spduration)#
library(xtable)#
library(zoo)#
#
# Source helper functions#
source("R/utilities/theme_models.R")#
source("R/utilities/ensemble_forecast.R")#
source("R/utilities/worldMap.R")
load("data/irc_data_mod.rda")
ls()
var.data <- irc.data[!is.na(irc.data$DEMOC.l1), ]#
#
var.data$i.conf.GOVtGOV.l1 <- with(var.data, i.verb.conf.GOVtGOV.l1 + #
	i.matl.conf.GOVtGOV.l1)#
var.data$i.coop.GOVtGOV.l1 <- with(var.data, i.verb.coop.GOVtGOV.l1 + #
	i.verb.coop.GOVtGOV.l1)#
#
library(plyr)#
#
source("R/utilities/varDecomp.R")
var.names <- names(var.data)[c(14, 19:225)]#
#
ss <- lapply(var.names, function(x) varDecomp(group=var.data$ccode, #
	var=var.data[, x]))#
ss <- do.call("rbind", ss)#
ss <- data.frame(variable=var.names, ss)#
#
ss$within.p <- ss$within/ss$total#
ss$between.p <- ss$between/ss$total#
#
ss$type <- ""#
ss$type[c(1:42, 206:208)] <- "Structural"#
ss$type[c(43:67, 178:205)] <- "Behavioral"#
ss$type[68:111] <- "Spatial weights, Centroid or knn"#
ss$type[112:177] <- "Spatial weights, Gower D"
ss$type <- factor(ss$type, levels=c("Structural", "Behavioral", "Spatial weights, Centroid or knn",#
	"Spatial weights, Gower D"))#
#
ss$variable <- as.character(ss$variable)#
want  <- c("NY.GDP.PCAP.KD.l1", "..AA.ZF....l1", "ST.INT.RCPT.CD.l1", #
	"DEMOC.l1", "Oil.Futures.l1", "FP.CPI.TOTL.l1", "MS.MIL.XPND.GD.ZS.l1",#
	"i.conf.GOVtGOV.l1", "W.knn4.std.protest.tALL.l1", "BX.KLT.DINV.CD.WD.l1",#
	"W.gower.pol.protest.tALL.l1", "SP.DYN.LE00.FE.IN.l1")#
highlight <- ss[match(want, ss$variable), ]#
highlight$label <- c("GDP p.c.", "Exch. rate to SDR", #
	"Tourism receipts", "Polity DEM", "Oil Futures", "CPI", "Mil. exp.", #
	"Intra-gov. conflict", "knn4 protest", "FDI", "Gower Polity protest",#
	"Life expt., female")#
#
y.min <- max(1, round_any(min(ss3$total), 100, floor))#
p <- ggplot(data=ss, aes(x=total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 2e+27)) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))#
p <- p + geom_text(data=highlight, aes(x=total, y=between.p, label=label),#
	alpha=0.7, size=4)
y.min <- max(1, round_any(min(ss$total), 100, floor))#
p <- ggplot(data=ss, aes(x=total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 2e+27)) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))#
p <- p + geom_text(data=highlight, aes(x=total, y=between.p, label=label),#
	alpha=0.7, size=4)
library(scales)
y.min <- max(1, round_any(min(ss$total), 100, floor))#
p <- ggplot(data=ss, aes(x=total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 2e+27)) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))#
p <- p + geom_text(data=highlight, aes(x=total, y=between.p, label=label),#
	alpha=0.7, size=4)
?unit
library(grid)
y.min <- max(1, round_any(min(ss$total), 100, floor))#
p <- ggplot(data=ss, aes(x=total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 2e+27)) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))#
p <- p + geom_text(data=highlight, aes(x=total, y=between.p, label=label),#
	alpha=0.7, size=4)
p
head(ss)
hist(ss$total)
hist(log(ss$total, 10))
hist(log(log(ss$total, 10), 10))
ss$total <- log10(ss$total)
y.min <- max(1, round_any(min(ss$total), 100, floor))#
p <- ggplot(data=ss, aes(x=total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 2e+27)) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))#
p <- p + geom_text(data=highlight, aes(x=total, y=between.p, label=label),#
	alpha=0.7, size=4)
p
hist(ss$total)
hist(log10(ss$total))
p
range(ss$total)
y.min <- max(1, round_any(min(ss$total), 100, floor))#
p <- ggplot(data=ss, aes(x=total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(0, 26)) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))#
p <- p + geom_text(data=highlight, aes(x=total, y=between.p, label=label),#
	alpha=0.7, size=4)
p
p <- ggplot(data=ss, aes(x=total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(0.1, 26)) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))#
p <- p + geom_text(data=highlight, aes(x=total, y=between.p, label=label),#
	alpha=0.7, size=4)
p
range(log10(ss$total))
p <- ggplot(data=ss, aes(x=total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(-0.1, 1.4)) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))#
p <- p + geom_text(data=highlight, aes(x=total, y=between.p, label=label),#
	alpha=0.7, size=4)
p
range(ss$total)
p <- ggplot(data=ss, aes(x=total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10() +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))#
p <- p + geom_text(data=highlight, aes(x=total, y=between.p, label=label),#
	alpha=0.7, size=4)
p
p <- ggplot(data=ss, aes(x=total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10() +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p
range(ss$total)
ggsave(file="graphics/var_all_loglog.png", p, width=5, height=5.5, dpi=300)
ss <- lapply(var.names, function(x) varDecomp(group=var.data$ccode, #
	var=var.data[, x]))#
ss <- do.call("rbind", ss)#
ss <- data.frame(variable=var.names, ss)#
#
ss$within.p <- ss$within/ss$total#
ss$between.p <- ss$between/ss$total#
#
ss$type <- ""#
ss$type[c(1:42, 206:208)] <- "Structural"#
ss$type[c(43:67, 178:205)] <- "Behavioral"#
ss$type[68:111] <- "Spatial weights, Centroid or knn"#
ss$type[112:177] <- "Spatial weights, Gower D"#
#
ss$type <- factor(ss$type, levels=c("Structural", "Behavioral", "Spatial weights, Centroid or knn",#
	"Spatial weights, Gower D"))#
#
ss$variable <- as.character(ss$variable)#
want  <- c("NY.GDP.PCAP.KD.l1", "..AA.ZF....l1", "ST.INT.RCPT.CD.l1", #
	"DEMOC.l1", "Oil.Futures.l1", "FP.CPI.TOTL.l1", "MS.MIL.XPND.GD.ZS.l1",#
	"i.conf.GOVtGOV.l1", "W.knn4.std.protest.tALL.l1", "BX.KLT.DINV.CD.WD.l1",#
	"W.gower.pol.protest.tALL.l1", "SP.DYN.LE00.FE.IN.l1")#
highlight <- ss[match(want, ss$variable), ]#
highlight$label <- c("GDP p.c.", "Exch. rate to SDR", #
	"Tourism receipts", "Polity DEM", "Oil Futures", "CPI", "Mil. exp.", #
	"Intra-gov. conflict", "knn4 protest", "FDI", "Gower Polity protest",#
	"Life expt., female")#
#
y.min <- max(1, round_any(min(ss$total), 100, floor))#
p <- ggplot(data=ss, aes(x=total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 2e+27)) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2)) +#
	annotation_logticks(sides="b")#
p <- p + geom_text(data=highlight, aes(x=total, y=between.p, label=label),#
	alpha=0.7, size=4)
p
ggsave(file="graphics/var_all.png", p, width=5, height=5.5, dpi=300)
p <- ggplot(data=ss, aes(x=total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 2e+27)) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2)) #
p <- p + geom_text(data=highlight, aes(x=total, y=between.p, label=label),#
	alpha=0.7, size=4) #
ggsave(file="graphics/var_all.png", p, width=5, height=5.5, dpi=300)
hist(log(ss$total))
hist(log(log(ss$total)))
p <- ggplot(data=ss, aes(x=log(log(total)), y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2)) #
p <- p + geom_text(data=highlight, aes(x=total, y=between.p, label=label),#
	alpha=0.7, size=4)
p
p <- ggplot(data=ss, aes(x=log(log(total)), y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p
exp(exp(1))
exp(exp(2))
range(log10(ss$total))
exp(25)
10^25
ss$l10.total <- log10(ss$total)#
y.min <- 0#
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 30)) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p
y.min <- 1
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 30)) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p
10^0.1
ss$l10.total <- log10(ss$total)#
y.min <- 0.1#
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 30)) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p
y.min <- 0.9#
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 30)) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p
p <- p + geom_text(data=highlight, aes(x=log10(total), y=between.p, label=label),#
	alpha=0.7, size=4)
p
range(ss$total)
9.572416e+00
log10(9.57)
10^0.9
log10(9)
10^seq(from=1, to=25, by=5)
10^seq(from=1, to=26, by=5)
log10(10^seq(from=1, to=26, by=5))
range(ss$l10.total)
paste0("10^", seq(from=1, to=26, by=5))
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 30), breaks=seq(from=1, to=26, by=5), labels=paste0("10^", seq(from=1, to=26, by=5))) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 30), minor.breaks=sequ(from=1, to=26, by=2), breaks=seq(from=1, to=26, by=5), labels=paste0("10^", seq(from=1, to=26, by=5))) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 30), minor.breaks=seq(from=1, to=26, by=2), breaks=seq(from=1, to=26, by=5), labels=paste0("10^", seq(from=1, to=26, by=5))) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 30), minor_breaks=seq(from=1, to=26, by=2), breaks=seq(from=1, to=26, by=5), labels=paste0("10^", seq(from=1, to=26, by=5))) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 30), minor_breaks=seq(from=1, to=26, by=1), breaks=seq(from=1, to=26, by=5), labels=paste0("10^", seq(from=1, to=26, by=5))) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 30), minor_breaks=c(1, 2, 3, 4, 5), breaks=seq(from=1, to=26, by=5), labels=paste0("10^", seq(from=1, to=26, by=5))) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 30), minor_breaks=c(2, 3, 4, 5), breaks=seq(from=1, to=26, by=5), labels=paste0("10^", seq(from=1, to=26, by=5))) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 30), minor_breaks=c(2, 3, 4, 5), breaks=seq(from=1, to=26, by=5), labels=paste0("10^", seq(from=1, to=26, by=5))) +#
	scale_y_continuous(limits=c(0, 1)) +#
	theme(panel.grid.minor = element_line(colour="blue", size=0.5))  +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p
1:26
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 30), minor_breaks=1:26, breaks=seq(from=1, to=26, by=5), labels=paste0("10^", seq(from=1, to=26, by=5))) +#
	scale_y_continuous(limits=c(0, 1)) +#
	theme(panel.grid.minor = element_line(colour="blue", size=0.5))  +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
P
p
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 30), breaks=seq(from=1, to=26, by=5), labels=paste0("10^", seq(from=1, to=26, by=5))) +#
	scale_y_continuous(limits=c(0, 1)) +#
	theme(panel.grid.minor = element_line(colour="blue", size=0.5))  +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 30), minor_breaks=26, breaks=seq(from=1, to=26, by=5), labels=paste0("10^", seq(from=1, to=26, by=5))) +#
	scale_y_continuous(limits=c(0, 1)) +#
	theme(panel.grid.minor = element_line(colour="blue", size=0.5))  +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2)) #
p <- p + geom_text(data=highlight, aes(x=log10(total), y=between.p, label=label),#
	alpha=0.7, size=4)
p
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 30), minor_breaks=1:50, breaks=seq(from=1, to=26, by=5), labels=paste0("10^", seq(from=1, to=26, by=5))) +#
	scale_y_continuous(limits=c(0, 1)) +#
	theme(panel.grid.minor = element_line(colour="blue", size=0.5))  +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2)) #
p <- p + geom_text(data=highlight, aes(x=log10(total), y=between.p, label=label),#
	alpha=0.7, size=4)
p
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 30), minor_breaks=c(1:200), breaks=seq(from=1, to=26, by=5), labels=paste0("10^", seq(from=1, to=26, by=5))) +#
	scale_y_continuous(limits=c(0, 1)) +#
	theme(panel.grid.minor = element_line(colour="blue", size=0.5))  +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2)) #
p <- p + geom_text(data=highlight, aes(x=log10(total), y=between.p, label=label),#
	alpha=0.7, size=4)
p
10^10
1e+10
1e+10
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 30), minor_breaks=c(1:1000), breaks=seq(from=1, to=26, by=5), labels=paste0("10^", seq(from=1, to=26, by=5))) +#
	scale_y_continuous(limits=c(0, 1)) +#
	theme(panel.grid.minor = element_line(colour="blue", size=0.5))  +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 30), minor_breaks=c(1:1000), breaks=seq(from=1, to=26, by=5), labels=expression(paste0("10^", seq(from=1, to=26, by=5)))) +#
	scale_y_continuous(limits=c(0, 1)) +#
	theme(panel.grid.minor = element_line(colour="blue", size=0.5))  +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 30), minor_breaks=c(1:1000), breaks=seq(from=1, to=26, by=5), labels=paste0("10^", seq(from=1, to=26, by=5))) +#
	scale_y_continuous(limits=c(0, 1)) +#
	theme(panel.grid.minor = element_line(colour="blue", size=0.5))  +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 30), breaks=seq(from=1, to=26, by=5), labels=paste0("10^", seq(from=1, to=26, by=5))) +#
	scale_y_continuous(limits=c(0, 1)) +#
	theme(panel.grid.minor = element_line(colour="blue", size=0.5))  +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 30), minor_breaks=NULL, breaks=seq(from=1, to=26, by=5), labels=paste0("10^", seq(from=1, to=26, by=5))) +#
	scale_y_continuous(limits=c(0, 1)) +#
	theme(panel.grid.minor = element_line(colour="blue", size=0.5))  +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(minor_breaks=NULL, breaks=seq(from=1, to=26, by=5), labels=paste0("10^", seq(from=1, to=26, by=5))) +#
	scale_y_continuous(limits=c(0, 1)) +#
	theme(panel.grid.minor = element_line(colour="blue", size=0.5))  +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p
expression(paste0("10^", seq(from=1, to=26, by=5)))
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(minor_breaks=NULL, breaks=seq(from=1, to=26, by=5), labels=expression(paste0("10^", seq(from=1, to=26, by=5)))) +#
	scale_y_continuous(limits=c(0, 1)) +#
	theme(panel.grid.minor = element_line(colour="blue", size=0.5))  +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p
length(expression(paste0("10^", seq(from = 1, to = 26, by = 5))))
length(expression(Alpha, Beta, Omega))
length(paste0("10^", seq(from = 1, to = 26, by = 5)))
length(seq(from=1, to=26, by=5))
paste0("10^", seq(from = 1, to = 26, by = 5))
dput(paste0("10^", seq(from = 1, to = 26, by = 5)))
expression(c("10^1", "10^6", "10^11", "10^16", "10^21", "10^26"))
length(expression(c("10^1", "10^6", "10^11", "10^16", "10^21", "10^26")))
?do.call
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(minor_breaks=NULL, breaks=seq(from=1, to=26, by=5), labels=do.call(expression, paste0("10^", seq(from=1, to=26, by=5)))) +#
	scale_y_continuous(limits=c(0, 1)) +#
	theme(panel.grid.minor = element_line(colour="blue", size=0.5))  +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(minor_breaks=NULL, breaks=seq(from=1, to=26, by=5), labels=do.call(expression, list(paste0("10^", seq(from=1, to=26, by=5)))) +#
	scale_y_continuous(limits=c(0, 1)) +#
	theme(panel.grid.minor = element_line(colour="blue", size=0.5))  +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
)
?do.call
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(minor_breaks=NULL, breaks=seq(from=1, to=26, by=5), labels=do.call(expression, list(paste0("10^", seq(from=1, to=26, by=5))))) +#
	scale_y_continuous(limits=c(0, 1)) +#
	theme(panel.grid.minor = element_line(colour="blue", size=0.5))  +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
do.call(expression, list(paste0("10^", seq(from=1, to=26, by=5))))
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(minor_breaks=NULL, breaks=seq(from=1, to=26, by=5), labels=expression("10^1", "10^6", "10^11", "10^16", "10^21", "10^26")) +#
	scale_y_continuous(limits=c(0, 1)) +#
	theme(panel.grid.minor = element_line(colour="blue", size=0.5))  +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(minor_breaks=NULL, breaks=seq(from=1, to=26, by=5), labels=expression(10^1, 10^6, "10^11", "10^16", "10^21", "10^26")) +#
	scale_y_continuous(limits=c(0, 1)) +#
	theme(panel.grid.minor = element_line(colour="blue", size=0.5))  +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(minor_breaks=NULL, breaks=seq(from=1, to=26, by=5), labels=expression(10^1, 10^6, 10^11, 10^16, 10^21, 10^26)) +#
	scale_y_continuous(limits=c(0, 1)) +#
	theme(panel.grid.minor = element_line(colour="blue", size=0.5))  +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p
ss$l10.total <- log10(ss$total)#
y.min <- log10(9)#
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(minor_breaks=NULL, breaks=seq(from=1, to=26, by=5), labels=expression(10^1, 10^6, 10^11, 10^16, 10^21, 10^26)) +#
	scale_y_continuous(limits=c(0, 1)) +#
	theme(panel.grid.minor = element_line(colour="blue", size=0.5))  +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2)) #
p <- p + geom_text(data=highlight, aes(x=log10(total), y=between.p, label=label),#
	alpha=0.7, size=4) #
ggsave(file="graphics/var_all_loglog.png", p, width=5, height=5.5, dpi=300)
p
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(minor_breaks=NULL, breaks=seq(from=1, to=26, by=5), labels=expression(10^1, 10^6, 10^11, 10^16, 10^21, 10^26)) +#
	scale_y_continuous(limits=c(0, 1)) +#
	theme(panel.grid.minor = element_line(colour="blue", size=0.5))  +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2)) #
p <- p + geom_text(data=highlight, aes(x=log10(total), y=between.p, label=label),#
	alpha=0.7, size=4, hjust=-1)
p
p <- p + geom_text(data=highlight, aes(x=log10(total), y=between.p, label=label),#
	alpha=0.7, size=4, hjust=0.1)
p
p <- p + geom_text(data=highlight, aes(x=log10(total), y=between.p, label=label),#
	alpha=0.7, size=4, hjust=1)
p
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(minor_breaks=NULL, breaks=seq(from=1, to=26, by=5), labels=expression(10^1, 10^6, 10^11, 10^16, 10^21, 10^26)) +#
	scale_y_continuous(limits=c(0, 1)) +#
	theme(panel.grid.minor = element_line(colour="blue", size=0.5))  +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2)) #
p <- p + geom_text(data=highlight, aes(x=log10(total), y=between.p, label=label),#
	alpha=0.7, size=4, hjust=1)
p
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(minor_breaks=NULL, breaks=seq(from=1, to=26, by=5), labels=expression(10^1, 10^6, 10^11, 10^16, 10^21, 10^26)) +#
	scale_y_continuous(limits=c(0, 1)) +#
	theme(panel.grid.minor = element_line(colour="blue", size=0.5))  +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2)) #
p <- p + geom_text(data=highlight, aes(x=log10(total), y=between.p, label=label),#
	alpha=0.7, size=4, hjust=0.5)
p
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(minor_breaks=NULL, breaks=seq(from=1, to=26, by=5), labels=expression(10^1, 10^6, 10^11, 10^16, 10^21, 10^26)) +#
	scale_y_continuous(limits=c(0, 1)) +#
	theme(panel.grid.minor = element_line(colour="blue", size=0.5))  +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2)) #
p <- p + geom_text(data=highlight, aes(x=log10(total), y=between.p, label=label),#
	alpha=0.7, size=4, hjust=0.8, vjust=0)
p
ss$l10.total <- log10(ss$total)#
y.min <- log10(9)#
p <- ggplot(data=ss, aes(x=l10.total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(minor_breaks=NULL, breaks=seq(from=1, to=26, by=5), labels=expression(10^1, 10^6, 10^11, 10^16, 10^21, 10^26)) +#
	scale_y_continuous(limits=c(0, 1)) +#
	theme(panel.grid.minor = element_line(colour="blue", size=0.5))  +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2)) #
p <- p + geom_text(data=highlight, aes(x=log10(total), y=between.p, label=label),#
	alpha=0.7, size=4, hjust=0.8, vjust=0) #
ggsave(file="graphics/var_all_loglog.png", p, width=5, height=5.5, dpi=300)
y.min <- max(1, round_any(min(ss$total), 100, floor))
y.min
p <- ggplot(data=ss, aes(x=total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 2e+27), breaks=c(10^seq(from=0, to=27, by=5))) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p
p <- ggplot(data=ss, aes(x=total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 2e+27), breaks=c(10^seq(from=0, to=27, by=5)), labels=expression(10^0, 10^5, 10^10, 10^15, 10^20, 10^25)) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p
p <- ggplot(data=ss, aes(x=total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 2e+27), minor_breaks=c(10^1:5), breaks=c(10^seq(from=0, to=27, by=5)), labels=expression(10^0, 10^5, 10^10, 10^15, 10^20, 10^25)) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2)) #
p <- p + geom_text(data=highlight, aes(x=total, y=between.p, label=label),#
	alpha=0.7, size=4)
p
p <- ggplot(data=ss, aes(x=total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	theme(panel.grid.minor = element_line(colour="black", size=0.5)) +#
	scale_x_log10(limits=c(y.min, 2e+27), minor_breaks=c(10^1:5), breaks=c(10^seq(from=0, to=27, by=5)), labels=expression(10^0, 10^5, 10^10, 10^15, 10^20, 10^25)) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p
c(10^1:5)
p <- ggplot(data=ss, aes(x=total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	theme(panel.grid.minor = element_line(colour="black", size=0.5)) +#
	scale_x_log10(limits=c(y.min, 2e+27), minor_breaks=c(10^(1:5)), breaks=c(10^seq(from=0, to=27, by=5)), labels=expression(10^0, 10^5, 10^10, 10^15, 10^20, 10^25)) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2)) #
p <- p + geom_text(data=highlight, aes(x=total, y=between.p, label=label),#
	alpha=0.7, size=4)
p
p <- ggplot(data=ss, aes(x=total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	theme(panel.grid.minor = element_line(colour="black", size=0.5)) +#
	scale_x_log10(limits=c(y.min, 2e+27), minor_breaks=c(10:5), breaks=c(10^seq(from=0, to=27, by=5)), labels=expression(10^0, 10^5, 10^10, 10^15, 10^20, 10^25)) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2))
p
p <- ggplot(data=ss, aes(x=total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	theme(panel.grid.minor = element_line(colour="black", size=0.5)) +#
	scale_x_log10(limits=c(y.min, 2e+27), minor_breaks=c(0:27), breaks=c(10^seq(from=0, to=27, by=5)), labels=expression(10^0, 10^5, 10^10, 10^15, 10^20, 10^25)) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2)) #
p <- p + geom_text(data=highlight, aes(x=total, y=between.p, label=label),#
	alpha=0.7, size=4)
p
y.min <- max(1, round_any(min(ss$total), 100, floor))#
p <- ggplot(data=ss, aes(x=total, y=between.p)) +#
	geom_abline(intercept=0.5, slope=0, size=0.5, col="cyan", alpha=0.5) +#
	geom_point(aes(color=type), size=2, alpha=0.5) +#
	scale_x_log10(limits=c(y.min, 2e+27), minor_breaks=c(0:27), breaks=c(10^seq(from=0, to=27, by=5)), labels=expression(10^0, 10^5, 10^10, 10^15, 10^20, 10^25)) +#
	scale_y_continuous(limits=c(0, 1)) +#
	labs(x="Total variance", y="Between/Total", col="") +#
	theme_bw() +#
	theme(plot.title = element_text(vjust=2), legend.position="bottom",#
		legend.direction="vertical", legend.margin=unit(-0.6,"cm")) +#
	guides(col = guide_legend(ncol = 2)) #
p <- p + geom_text(data=highlight, aes(x=total, y=between.p, label=label),#
	alpha=0.7, size=4) #
ggsave(file="graphics/var_all.png", p, width=5, height=5.5, dpi=300)
quit("no")
